body {
font-family:Verdana;
color:#525353;
font-size:.95em;
margin:0px;
padding:0px;
}

a{
color:#3F617F;
}

a:visited{
color:#4F4640;
}

img{
border:0px;
}

#header {
background: #99B3CC;
height:78px;
}

#header_logo{
float:left;
}


#header_title{
font-size: 1.5em;
padding-top:27px;
margin-left:310px;
color:#4F4640;
/*text-transform:lowercase;*/
}

#header_logo{
float:left;
}

#searchbox{
float:right;
}

#navbar{
background:#eee;
}

#searchbox, #navbar{
padding:8px 5px 10px 5px;
}

#content{
padding:10px;
}

#recent_uploads{
float:right;
width:200px;
border-left: #ccc 1px solid;
border-bottom: #ccc 1px solid;
padding: 10px;
}

#footer {
margin-top: 20px;
border-top: 1px solid #eee;
padding: 10px;
}

.darkred {
    color: darkred;
}

.about_items {
    color: darkolivegreen;
}

.list-box {
    margin: 10px;
    padding: -5px 15px 0px 0px;
    background:lightgrey;
    border: 2px solid black;
    width: 350px;
    max-width: 90%;
}

.map-container {
    width:512px;
    height:256px;
    max-width: 90%;
    margin:10px;
    padding: -5px 15px 0px 0px;
    border: 2px solid darkblue;
}

li {
    clear:left;
}

.hidden {
    display: none;
}

.crs_error {
    color: #A00000;
}

/*https://stackoverflow.com/questions/43267742/make-flex-direction-switch-to-column-if-theres-not-enough-space-in-a-row*/
.outer-wrapper {
    display: flex;
    width: 100%;
    height: auto;
    flex-wrap: nowrap;
}

.inner-flexbox {
    /*width: 75%;*/
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    flex-flow: row wrap;
    justify-content: space-between;
}

.inner-flexbox>div {
    max-width: 500px;
}

.nicewkt {border-left-width: 0px; border-bottom-width: 2px; border-right-width: 0px; border-top-width: 2px;
          width: 97%; border-color: #a2d545; border-style: solid; font-size: 11px;
          margin-bottom: 10px; margin-top: 10px; overflow: auto; padding-left: 10px; padding-right: 10px;
          background: #eeeeee; border-radius: 2px; border-radius: 2px;}

.errorlist { font-weight: bold; color: #db1604; }

.syntax .c { color: #60a0b0; font-style: italic } /* Comment */
.syntax .err { border: 1px solid #FF0000 } /* Error */
.syntax .k { color: #007020; font-weight: bold } /* Keyword */
.syntax .o { color: #666666 } /* Operator */
.syntax .cm { color: #60a0b0; font-style: italic } /* Comment.Multiline */
.syntax .cp { color: #007020 } /* Comment.Preproc */
.syntax .c1 { color: #60a0b0; font-style: italic } /* Comment.Single */
.syntax .cs { color: #60a0b0; background-color: #fff0f0 } /* Comment.Special */
.syntax .gd { color: #A00000 } /* Generic.Deleted */
.syntax .ge { font-style: italic } /* Generic.Emph */
.syntax .gr { color: #FF0000 } /* Generic.Error */
.syntax .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.syntax .gi { color: #00A000 } /* Generic.Inserted */
.syntax .go { color: #808080 } /* Generic.Output */
.syntax .gp { color: #c65d09; font-weight: bold } /* Generic.Prompt */
.syntax .gs { font-weight: bold } /* Generic.Strong */
.syntax .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.syntax .gt { color: #0040D0 } /* Generic.Traceback */
.syntax .kc { color: #007020; font-weight: bold } /* Keyword.Constant */
.syntax .kd { color: #007020; font-weight: bold } /* Keyword.Declaration */
.syntax .kp { color: #007020 } /* Keyword.Pseudo */
.syntax .kr { color: #007020; font-weight: bold } /* Keyword.Reserved */
.syntax .kt { color: #902000 } /* Keyword.Type */
.syntax .m { color: #40a070 } /* Literal.Number */
.syntax .s { color: #4070a0 } /* Literal.String */
.syntax .na { color: #4070a0 } /* Name.Attribute */
.syntax .nb { color: #007020 } /* Name.Builtin */
.syntax .nc { color: #0e84b5; font-weight: bold } /* Name.Class */
.syntax .no { color: #60add5 } /* Name.Constant */
.syntax .nd { color: #555555; font-weight: bold } /* Name.Decorator */
.syntax .ni { color: #d55537; font-weight: bold } /* Name.Entity */
.syntax .ne { color: #007020 } /* Name.Exception */
.syntax .nf { color: #06287e } /* Name.Function */
.syntax .nl { color: #002070; font-weight: bold } /* Name.Label */
.syntax .nn { color: #0e84b5; font-weight: bold } /* Name.Namespace */
.syntax .nt { color: #062873; font-weight: bold } /* Name.Tag */
.syntax .nv { color: #bb60d5 } /* Name.Variable */
.syntax .ow { color: #007020; font-weight: bold } /* Operator.Word */
.syntax .w { color: #bbbbbb } /* Text.Whitespace */
.syntax .mf { color: #40a070 } /* Literal.Number.Float */
.syntax .mh { color: #40a070 } /* Literal.Number.Hex */
.syntax .mi { color: #40a070 } /* Literal.Number.Integer */
.syntax .mo { color: #40a070 } /* Literal.Number.Oct */
.syntax .sb { color: #4070a0 } /* Literal.String.Backtick */
.syntax .sc { color: #4070a0 } /* Literal.String.Char */
.syntax .sd { color: #4070a0; font-style: italic } /* Literal.String.Doc */
.syntax .s2 { color: #4070a0 } /* Literal.String.Double */
.syntax .se { color: #4070a0; font-weight: bold } /* Literal.String.Escape */
.syntax .sh { color: #4070a0 } /* Literal.String.Heredoc */
.syntax .si { color: #70a0d0; font-style: italic } /* Literal.String.Interpol */
.syntax .sx { color: #c65d09 } /* Literal.String.Other */
.syntax .sr { color: #235388 } /* Literal.String.Regex */
.syntax .s1 { color: #4070a0 } /* Literal.String.Single */
.syntax .ss { color: #517918 } /* Literal.String.Symbol */
.syntax .bp { color: #007020 } /* Name.Builtin.Pseudo */
.syntax .vc { color: #bb60d5 } /* Name.Variable.Class */
.syntax .vg { color: #bb60d5 } /* Name.Variable.Global */
.syntax .vi { color: #bb60d5 } /* Name.Variable.Instance */
.syntax .il { color: #40a070 } /* Literal.Number.Integer.Long */
.syntax .il { color: #40a070 } /* Literal.Number.Integer.Long */